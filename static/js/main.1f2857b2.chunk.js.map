{"version":3,"sources":["Converter.js","index.js"],"names":["Converter","state","currencies","base","amount","convertTo","result","date","response","handleSelect","e","setState","target","name","value","calculate","handleInput","isNaN","alert","console","log","fetch","then","res","json","data","rates","toFixed","handleSwap","preventDefault","this","currencyArray","v","push","table","className","type","onChange","id","map","currency","key","disabled","onClick","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f2857b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n// import RenderBarChart from './chart'\n\nclass Converter extends Component {\n  state = {\n    currencies: [\"EUR\"],\n    base: \"USD\",\n    amount: 0,\n    convertTo: \"EUR\",\n    result: \"\",\n    date: \"\",\n    response: null\n  };\n\n  componentDidMount() {\n\n\n    fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n      .then(res => res.json())\n      .then(data => {\n        const rates = data.rates;\n\n        let currencyArray = [];\n        for (let v in rates) {\n          currencyArray.push(v);\n        }\n        this.setState({ currencies: currencyArray, response: data.rates });\n        console.table(this.state.response)\n      })\n\n  }\n\n  handleSelect = e => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value,\n        result: null\n      },\n\n      this.calculate\n    );\n  };\n\n  handleInput = e => {\n    this.setState(\n      {\n        amount: e.target.value,\n        result: null,\n        date: null\n      },\n      this.calculate\n    );\n  };\n\n  calculate = () => {\n    const amount = this.state.amount;\n    if (amount === isNaN || amount < 0) {\n      alert(\"No negatives allowed\");\n      this.setState({ amount: 0 });\n    } else {\n      console.log(amount);\n\n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n        .then(res => res.json())\n        .then(data => {\n          const date = data.date;\n          const result = (data.rates[this.state.convertTo] * amount).toFixed(4);\n          this.setState({\n            result,\n            date\n          });\n        });\n    }\n  };\n  handleSwap = e => {\n    const base = this.state.base;\n    const convertTo = this.state.convertTo;\n    e.preventDefault();\n    this.setState(\n      {\n        convertTo: base,\n        base: convertTo,\n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  render() {\n    const { currencies, base, amount, convertTo, result, date } = this.state;\n    return (\n      <div className=\"converter\">\n        <div className=\"container my-5\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 mx-auto\">\n              <div className=\"card card-body\">\n                <h5>\n                  {amount} {base} is equivalent to\n              </h5>\n                <h2>\n                  {amount === \"\"\n                    ? \"0\"\n                    : result === null\n                      ? \"Calculating...\"\n                      : result}{\" \"}\n                  {convertTo}\n                </h2>\n                <p>As of {amount === \"\" ? \"/ / /\" : date === null ? \"\" : date}</p>\n                <div className=\"row\">\n                  <div className=\"col-lg-10\">\n                    <form className=\"form-inline mb-4\">\n                      <input\n                        type=\"number\"\n                        value={amount}\n                        onChange={this.handleInput}\n                        className=\"form-control form-control-lg mx-3\"\n                        id=\"amount\"\n                      />\n                      <select\n                        name=\"base\"\n                        value={base}\n                        onChange={this.handleSelect}\n                        className=\"form-control form-control-lg\"\n                        id=\"currency\"\n                      >\n                        {currencies.map(currency => (\n                          <option key={currency} value={currency}>\n                            {currency}\n                          </option>\n                        ))}\n                      </select>\n                    </form>\n\n                    <form className=\"form-inline mb-4\">\n                      <input\n                        disabled={true}\n                        value={\n                          amount === \"\"\n                            ? \"0\"\n                            : result === null\n                              ? \"Calculating...\"\n                              : result\n                        }\n                        className=\"form-control form-control-lg mx-3\"\n                        id=\"amount\"\n                      />\n                      <select\n                        name=\"convertTo\"\n                        value={convertTo}\n                        onChange={this.handleSelect}\n                        className=\"form-control form-control-lg\"\n                        id=\"currency\"\n                      >\n                        {currencies.map(currency => (\n                          <option key={currency} value={currency}>\n                            {currency}\n                          </option>\n                        ))}\n                      </select>\n                    </form>\n                  </div>\n\n                  <div className=\"col-lg-2 align-self-center\">\n                    <h1 onClick={this.handleSwap} className=\"swap\">\n                      &#8595;&#8593;\n                  </h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n          {/* <RenderBarChart responseData={this.state.response}/> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Converter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as V from 'victory';\nimport Converter from \"./Converter\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}