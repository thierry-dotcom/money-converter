{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thierry\\\\Desktop\\\\moneyconverter-masterwerkt\\\\src\\\\Converter.js\";\nimport React, { Component } from \"react\"; // import RenderBarChart from './chart'\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currencies: [\"EUR\"],\n      base: \"USD\",\n      amount: 0,\n      convertTo: \"EUR\",\n      result: \"\",\n      date: \"\",\n      response: null\n    };\n\n    this.handleSelect = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        result: null\n      }, this.calculate);\n    };\n\n    this.handleInput = e => {\n      this.setState({\n        amount: e.target.value,\n        result: null,\n        date: null\n      }, this.calculate);\n    };\n\n    this.calculate = () => {\n      const amount = this.state.amount;\n\n      if (amount === isNaN || amount < 0) {\n        alert(\"No negatives allowed\");\n        this.setState({\n          amount: 0\n        });\n      } else {\n        console.log(amount);\n        fetch(\"https://api.exchangeratesapi.io/latest?base=\".concat(this.state.base)).then(res => res.json()).then(data => {\n          const date = data.date;\n          const result = (data.rates[this.state.convertTo] * amount).toFixed(4);\n          this.setState({\n            result,\n            date\n          });\n        });\n      }\n    };\n\n    this.handleSwap = e => {\n      const base = this.state.base;\n      const convertTo = this.state.convertTo;\n      e.preventDefault();\n      this.setState({\n        convertTo: base,\n        base: convertTo,\n        result: null\n      }, this.calculate);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.exchangeratesapi.io/latest?base=\".concat(this.state.base)).then(res => res.json()).then(data => {\n      const rates = data.rates;\n      let currencyArray = [];\n\n      for (let v in rates) {\n        currencyArray.push(v);\n      }\n\n      this.setState({\n        currencies: currencyArray,\n        response: data.rates\n      });\n      console.table(this.state.response);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          currencies = _this$state.currencies,\n          base = _this$state.base,\n          amount = _this$state.amount,\n          convertTo = _this$state.convertTo,\n          result = _this$state.result,\n          date = _this$state.date;\n    return React.createElement(\"div\", {\n      className: \"converter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, amount, \" \", base, \" is equivalent to\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, amount === \"\" ? \"0\" : result === null ? \"Calculating...\" : result, \" \", convertTo), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"As of \", amount === \"\" ? \"/ / /\" : date === null ? \"\" : date), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-inline mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      value: amount,\n      onChange: this.handleInput,\n      className: \"form-control form-control-lg mx-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"base\",\n      value: base,\n      onChange: this.handleSelect,\n      className: \"form-control form-control-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, currencies.map(currency => React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, currency)))), React.createElement(\"form\", {\n      className: \"form-inline mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      disabled: true,\n      value: amount === \"\" ? \"0\" : result === null ? \"Calculating...\" : result,\n      className: \"form-control form-control-lg mx-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"convertTo\",\n      value: convertTo,\n      onChange: this.handleSelect,\n      className: \"form-control form-control-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, currencies.map(currency => React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, currency))))), React.createElement(\"div\", {\n      className: \"col-lg-2 align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.handleSwap,\n      className: \"swap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"\\u2193\\u2191\"))))))));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/Thierry/Desktop/moneyconverter-masterwerkt/src/Converter.js"],"names":["React","Component","Converter","state","currencies","base","amount","convertTo","result","date","response","handleSelect","e","setState","target","name","value","calculate","handleInput","isNaN","alert","console","log","fetch","then","res","json","data","rates","toFixed","handleSwap","preventDefault","componentDidMount","currencyArray","v","push","table","render","map","currency"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// import RenderBarChart from './chart'\n\nclass Converter extends Component {\n  state = {\n    currencies: [\"EUR\"],\n    base: \"USD\",\n    amount: 0,\n    convertTo: \"EUR\",\n    result: \"\",\n    date: \"\",\n    response: null\n  };\n\n  componentDidMount() {\n\n\n    fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n      .then(res => res.json())\n      .then(data => {\n        const rates = data.rates;\n\n        let currencyArray = [];\n        for (let v in rates) {\n          currencyArray.push(v);\n        }\n        this.setState({ currencies: currencyArray, response: data.rates });\n        console.table(this.state.response)\n      })\n\n  }\n\n  handleSelect = e => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value,\n        result: null\n      },\n\n      this.calculate\n    );\n  };\n\n  handleInput = e => {\n    this.setState(\n      {\n        amount: e.target.value,\n        result: null,\n        date: null\n      },\n      this.calculate\n    );\n  };\n\n  calculate = () => {\n    const amount = this.state.amount;\n    if (amount === isNaN || amount < 0) {\n      alert(\"No negatives allowed\");\n      this.setState({ amount: 0 });\n    } else {\n      console.log(amount);\n\n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n        .then(res => res.json())\n        .then(data => {\n          const date = data.date;\n          const result = (data.rates[this.state.convertTo] * amount).toFixed(4);\n          this.setState({\n            result,\n            date\n          });\n        });\n    }\n  };\n  handleSwap = e => {\n    const base = this.state.base;\n    const convertTo = this.state.convertTo;\n    e.preventDefault();\n    this.setState(\n      {\n        convertTo: base,\n        base: convertTo,\n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  render() {\n    const { currencies, base, amount, convertTo, result, date } = this.state;\n    return (\n      <div className=\"converter\">\n        <div className=\"container my-5\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 mx-auto\">\n              <div className=\"card card-body\">\n                <h5>\n                  {amount} {base} is equivalent to\n              </h5>\n                <h2>\n                  {amount === \"\"\n                    ? \"0\"\n                    : result === null\n                      ? \"Calculating...\"\n                      : result}{\" \"}\n                  {convertTo}\n                </h2>\n                <p>As of {amount === \"\" ? \"/ / /\" : date === null ? \"\" : date}</p>\n                <div className=\"row\">\n                  <div className=\"col-lg-10\">\n                    <form className=\"form-inline mb-4\">\n                      <input\n                        type=\"number\"\n                        value={amount}\n                        onChange={this.handleInput}\n                        className=\"form-control form-control-lg mx-3\"\n                      />\n                      <select\n                        name=\"base\"\n                        value={base}\n                        onChange={this.handleSelect}\n                        className=\"form-control form-control-lg\"\n                      >\n                        {currencies.map(currency => (\n                          <option key={currency} value={currency}>\n                            {currency}\n                          </option>\n                        ))}\n                      </select>\n                    </form>\n\n                    <form className=\"form-inline mb-4\">\n                      <input\n                        disabled={true}\n                        value={\n                          amount === \"\"\n                            ? \"0\"\n                            : result === null\n                              ? \"Calculating...\"\n                              : result\n                        }\n                        className=\"form-control form-control-lg mx-3\"\n                      />\n                      <select\n                        name=\"convertTo\"\n                        value={convertTo}\n                        onChange={this.handleSelect}\n                        className=\"form-control form-control-lg\"\n                      >\n                        {currencies.map(currency => (\n                          <option key={currency} value={currency}>\n                            {currency}\n                          </option>\n                        ))}\n                      </select>\n                    </form>\n                  </div>\n\n                  <div className=\"col-lg-2 align-self-center\">\n                    <h1 onClick={this.handleSwap} className=\"swap\">\n                      &#8595;&#8593;\n                  </h1>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n          {/* <RenderBarChart responseData={this.state.response}/> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Converter;\n"]},"metadata":{},"sourceType":"module"}